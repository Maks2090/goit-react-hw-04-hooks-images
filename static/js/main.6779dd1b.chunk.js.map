{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","Api/fetchImages.js","components/Button/Button.jsx","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmitForm","useState","searchQuery","setSearchQuery","className","onSubmit","e","preventDefault","trim","image","page","hits","type","value","onChange","target","toLowerCase","autoFocus","placeholder","ImageGallery","children","ImageGalleryItem","writeSrcState","onModal","imageGallery","writeState","dataset","src","length","map","webformatURL","alt","tags","largeImageURL","onClick","id","fetchImages","url","axios","get","then","images","Button","currentPage","totalHits","Modal","modalSrc","useEffect","closeModal","code","window","addEventListener","removeEventListener","currentTarget","App","setpage","setValue","setImages","setHits","showModal","setShowModal","setModalSrc","loader","setLoader","showLoader","totalImages","data","Notify","info","prevImages","scrollToBottom","catch","error","finally","status","writeToState","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6779dd1b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Searchbar({onSubmitForm}) {\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n   const handleSearchQueryChange = e => {\r\n        setSearchQuery(e.target.value.toLowerCase())\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (searchQuery.trim() === '') {\r\n            return;\r\n        }\r\n        \r\n        onSubmitForm({ image: searchQuery, page: 1, hits: 0 })\r\n        setSearchQuery('');\r\n    }\r\n    return (\r\n        <header className=\"Searchbar\">\r\n\r\n            <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    value={searchQuery}\r\n                    onChange={handleSearchQueryChange}\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    \r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                />\r\n            </form>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmitForm: PropTypes.func,\r\n  };","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery ({ children }) {\r\n\r\n      return (\r\n\r\n            <ul className=\"ImageGallery\">\r\n                {children}\r\n            </ul>\r\n\r\n     )\r\n\r\n    \r\n}\r\n\r\n\r\nImageGallery.propTypes = {\r\n    children: PropTypes.object,\r\n  };\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function ImageGalleryItem({writeSrcState, onModal, imageGallery }) {\r\n    const writeState = (e) => {\r\n        writeSrcState(e.target.dataset.src);\r\n        onModal(true);\r\n    };\r\n\r\n    return (\r\n        imageGallery.length !== 0 &&\r\n        imageGallery.map((image) => (\r\n            <li key={image.id}>\r\n                <img\r\n                    className=\"ImageGalleryItem-image\"\r\n                    src={image.webformatURL}\r\n                    alt={image.tags}\r\n                    data-src={image.largeImageURL}\r\n                    onClick={writeState}\r\n                />\r\n            </li>\r\n        ))\r\n    );\r\n}\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    imageGallery: PropTypes.arrayOf(PropTypes.object),\r\n    onModal: PropTypes.func,\r\n    writeSrcState: PropTypes.func,\r\n  };","import axios from \"axios\";\r\n\r\n\r\nconst BASE_URL = 'https://pixabay.com/api';\r\nconst API_KEY = '22631674-5d368c2f6a01c7affe232da9d';\r\n\r\nfunction fetchImages(value, page) {\r\n\r\n    const url = `${BASE_URL}/?key=${API_KEY}&q=${value}&page=${page}&image_type=photo&orientation=horizontal&safesearch=true&per_page=12`\r\n\r\n    return axios.get(url).then((images) => {\r\n        return images\r\n    })\r\n\r\n\r\n\r\n}\r\n\r\nexport default fetchImages","import PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Button ({onSubmit, currentPage, totalHits }) {\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      onSubmit({ page: currentPage + 1, hits: 0 });\r\n    };\r\n             \r\n      return (\r\n        totalHits !== 0 && (\r\n          <button\r\n            className=\"Button\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Load more\r\n          </button>\r\n        )\r\n      );\r\n    \r\n  }\r\n\r\n\r\n\r\n  Button.propTypes = {\r\n    totalHits: PropTypes.number,\r\n    onSubmit: PropTypes.func,\r\n    currentPage: PropTypes.number,\r\n  };","import { useEffect  } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Modal({modalSrc, onModal}) {\r\n  \r\n  useEffect(()=>{\r\n    const closeModal= (e) =>{\r\n      if(e.code === \"Escape\"){\r\n        onModal(false)\r\n      }\r\n    }\r\n    window.addEventListener(\"keydown\", closeModal);\r\n    return ()=>{\r\n      window.removeEventListener(\"keydown\", closeModal);\r\n    }\r\n  }, [onModal])\r\n\r\n   const onCloseModal = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onModal(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Overlay\" onClick={onCloseModal}>\r\n         <div className=\"Modal\">\r\n\r\n             <img src={modalSrc} alt=\"modal img\" />\r\n\r\n         </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n  Modal.propTypes = {\r\n    modalSrc: PropTypes.string,\r\n    onModal: PropTypes.func,\r\n  };","import './styles.css';\nimport { useState, useEffect } from 'react';\nimport { Notify } from \"notiflix\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery'\nimport ImageGalleryItem from './components/ImageGalleryItem/ImageGalleryItem'\nimport fetchImages from './Api/fetchImages';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\nimport Loader from \"react-loader-spinner\";\n\n\nexport default function App() {\n  const [page, setpage] = useState(null);\n  const [value, setValue] = useState('');\n  const [images, setImages] = useState([]);\n  const [hits, setHits] = useState(0);\n  const [showModal, setShowModal] = useState(false);\n  const [modalSrc, setModalSrc] = useState('');\n  const [loader, setLoader] = useState(false);\n\n  \n    useEffect(() =>{\n      if(!value){\n        return\n      }\n\n      showLoader(true);\n      fetchImages(value, page)\n        .then((totalImages) => {\n          setHits(totalImages.data.hits.length);\n          if (totalImages.data.hits.length === 0) {\n            Notify.info(\n              \"Sorry, there are no images matching your search query. Please try again.\"\n            );\n            setHits(0)\n          }\n          setImages((prevImages) => [...prevImages, ...totalImages.data.hits])\n          scrollToBottom()\n        })\n        .catch((error) => {\n          Notify.info(\n            \"Sorry, there are no images matching your search query. Please try again.\"\n          );\n          setHits(0);\n        })\n        .finally(() => showLoader(false));\n    }, [value, page])\n    \n    \n  \n\n  const showLoader = (status) => {\n    return setLoader(status);\n  };\n\n  const writeToState = (data) => {\n    if(data.image){\n      setImages([]);\n      setValue(data.image);\n      setpage(data.page)\n    } else {\n      setpage(data.page);}\n  };\n\n   const writeSrcState = (data) => {\n    setModalSrc(data)\n  };\n\n  const scrollToBottom = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const onModal = (data) => {\n    setShowModal(data);\n  };\n\n  return (\n    <div>\n      <Searchbar\n        onSubmitForm={writeToState}\n      />\n\n\n      <ImageGallery>\n        <ImageGalleryItem\n          imageGallery={images}\n          writeSrcState={writeSrcState}\n          onModal={onModal}\n        />\n      </ImageGallery>\n\n      {loader && (\n        <Loader className=\"Loader\" type=\"Puff\" color=\"#3f51b5\" height={80} width={80} timeout={1000}/>\n      )}\n\n      <Button\n        totalHits={hits}\n        onSubmit={writeToState}\n        currentPage={page}\n      />\n      {showModal && (\n        <Modal\n          modalSrc={modalSrc}\n          showLoader={showModal}\n          onModal={onModal}\n        />\n      )}\n\n\n\n    </div >\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}